version: '3.7'

x-base: &base
  env_file:
    - ./.env.dev
services:
#  zookeeper:
#    image: wurstmeister/zookeeper
#    ports:
#      - "2181:2181"
#  kafka:
#    <<: *base
#    hostname: kafka
#    image: wurstmeister/kafka
#    ports:
#      - "9092"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_CREATE_TOPICS: "${RAW_DATA_TOPIC_NAME}:1:1,${PARSED_DATA_TOPIC_NAME}:1:1"
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
  python:
    <<: *base
    build: ./services/python
    command: python app/main.py
    volumes:
      - ./services/python/:/usr/src/app/
#  flask_server:
#    <<: *base
#    build: ./services/flask_server
#    command: python manage.py run -h 0.0.0.0
#    volumes:
#      - ./services/flask_server/:/usr/src/app/
#    ports:
#      - 5000:5000
#    depends_on:
#      - db
#  django_server:
#    <<: *base
#    build: ./services/django_server
#    command: python manage.py runserver 0.0.0.0:8000
#    ports:
#      - 8000:8000
#    depends_on:
#      - db
#    volumes:
#      - ./django_server:/app
#  db:
#    <<: *base
#    image: postgres:12-alpine
#    volumes:
#      - postgres_data:/var/lib/postgresql/data/
#    environment:
#      - POSTGRES_USER=hello_flask
#      - POSTGRES_PASSWORD=hello_flask
#      - POSTGRES_DB=hello_flask_dev
#
#volumes:
#  postgres_data:
